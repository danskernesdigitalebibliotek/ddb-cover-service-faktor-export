openapi: 3.0.2
info:
  title: 'DDB Cover Service Faktor Export'
  version: 1.0.0
  description: '<p>The service is provided by <a href="https://www.danskernesdigitalebibliotek.dk/">Danskernes Digitale Bibliotek</a></p> <h4>Implementation notes</h4> Currently the API is not fully implemented. The following features are missing: <ul> <li>Oauth: not implemented.</li> </ul> <p><a href="https://www.gnu.org/licenses/agpl-3.0.en.html">GNU Affero General Public License</a></p>'
paths:
  /entries:
    get:
      tags:
        - Entry
      operationId: getEntryCollection
      summary: 'Retrieves the collection of Entry resources.'
      responses:
        200:
          description: 'Entry collection response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Entry:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry'
      parameters:
        -
          name: 'date[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'date[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'date[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'date[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: extracted
          in: query
          required: false
          schema:
            type: boolean
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
  '/entries/{id}':
    get:
      tags:
        - Entry
      operationId: getEntryItem
      summary: 'Retrieves a Entry resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Entry resource response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Entry:jsonld'
            text/html:
              schema:
                $ref: '#/components/schemas/Entry'
        404:
          description: 'Resource not found'
components:
  schemas:
    Entry:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: string
        date:
          type: string
          format: date-time
        clientId:
          type: string
        agency:
          type: string
        event:
          type: string
        materialId:
          type: string
        response: {  }
        imageId:
          type: string
        extracted:
          type: boolean
        extractionDate:
          type: string
          format: date-time
    'Entry:jsonld':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        date:
          type: string
          format: date-time
        clientId:
          type: string
        agency:
          type: string
        event:
          type: string
        materialId:
          type: string
        response: {  }
        imageId:
          type: string
        extracted:
          type: boolean
        extractionDate:
          type: string
          format: date-time
